{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\trivia\\\\src\\\\App.js\";\n//colocar high score\n//mostrar numero de acertos\n//mostrar a resposta certa quando a pessoa errar\n//mostrar a categoria\n//deixar a pessoa escolher a categoria\nimport React, { Component } from \"react\"; // import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\n\nimport Question from \"./components/Question\";\nimport Highscore from \"./components/Highscore\";\nimport \"./App.css\"; //import { qualifiedTypeIdentifier } from \"@babel/types\";\n//import { list } from \"postcss\"; \n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.createJson = async () => {\n      let lista = [];\n      console.log(\"AAAA\");\n      this.setState({\n        loading: true\n      });\n      await fetch(\"https://opentdb.com/api.php?amount=10\").then(response => response.json()) //.then(data => console.log(data))   \n      .then(data => {\n        console.log(data);\n        console.log(this.state.quiz); //this.state.quiz.push(data)\n\n        data.results[0].incorrect_answers.map(incorrect => {\n          lista.push(incorrect);\n        });\n        console.log(data);\n        lista.push(data.results[0].correct_answer);\n        this.makeSuffle(lista);\n        this.setState({\n          loading: false,\n          listAnwser: lista,\n          quiz: data\n        });\n      });\n      return true;\n    };\n\n    this.clicked = event => {\n      console.log(event.currentTarget.name);\n\n      if (this.checkAnswer(event.currentTarget.name)) {\n        this.createSetState();\n      } //else: parte do game over\n\n    };\n\n    this.createSetState = () => {\n      console.log(\"entrou no create state\");\n      console.log(this.state.id + 1); //pois o primeiro foi no componentdidmout\n\n      let lista = [];\n      this.state.quiz.results[this.state.id + 1].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      let correct = this.state.quiz.results[this.state.id + 1].correct_answer;\n      console.log(correct);\n      lista.push(correct);\n      this.makeSuffle(lista);\n      this.setState({\n        question: this.state.quiz.results[this.state.id + 1].question,\n        correct_answer: this.state.quiz.results[this.state.id + 1].correct_answer,\n        listAnwser: lista\n      });\n    };\n\n    this.checkAnswer = async answer => {\n      if (answer === this.state.correct_answer) {\n        let id_novo = this.state.id + 1;\n        this.setState({\n          id: id_novo\n        });\n        console.log(\"ACERTO\"); //clicked chamao checkAnswer e se true chama createSetState\n\n        return true;\n      } else {\n        console.log(\"ERROU\");\n        alert(\"Wrong answer. Game over.                                                         The correct answes was: \" + this.state.correct_answer);\n        alert(\"The correct answes was: \" + this.state.correct_answer); //var name = prompt(\"GREAT! You are in the top 10, type your name:\");\n        //console.log(name)\n        //zerar o id \n\n        let id_novo = 0;\n        console.log(id_novo);\n        this.setState({\n          id: id_novo\n        });\n        let a = await this.createJson();\n        console.log(this.state.quiz);\n        console.log(this.state.quiz.results[0].question);\n        this.setState({\n          question: this.state.quiz.results[0].question\n        });\n        this.setState({\n          correct_answer: this.state.quiz.results[0].correct_answer\n        });\n        return false;\n      }\n    };\n\n    this.createScore = async () => {\n      let listaUsuarios = [];\n      let listaScores = []; //console.log(\"entrou no createScore\")\n\n      this.setState({\n        loading: true\n      });\n      await fetch(\"http://localhost:4000/highscore\").then(response => response.json()) //.then(data => console.log(data))   \n      .then(data => {\n        this.setState({\n          highscore: data,\n          usuarios_score: listaUsuarios,\n          scores_score: listaScores\n        }); //console.log(data)    \n        //his.state.highscore.push(data)\n        //console.log(this.state.highscore.data[0].usuario)\n\n        for (var i = 0; i < 10; i++) {\n          // console.log(i)\n          // console.log(this.state.highscore.data[i].usuario)\n          listaUsuarios.push(this.state.highscore.data[i].score);\n          listaScores.push(this.state.highscore.data[i].usuario);\n        } // console.log(this.state.usuarios_score)\n        // console.log(this.state.scores_score)\n        //data[i] para mudar os dados\n        // console.log(this.state.highscore.data[0].usuario)\n        // console.log(this.state.highscore.data[0].score)\n        // console.log(usuarios_score)\n        // console.log(scores_score)\n        //console.log(this.state.highscore)\n        // this.setState({usuario:this.state.highscore.data[0].usuario})\n        // this.setState({score:this.state.highscore.data[0].score})\n\n      });\n      return true;\n    };\n\n    this.state = {\n      loading: false,\n      quiz: [],\n      listAnwser: [],\n      category: \"\",\n      question: \"\",\n      correct_answer: \"\",\n      id: 0,\n      difficulty: \"\",\n      type: \"\",\n      highscore: [],\n      usuario: \"\",\n      score: \"\",\n      usuarios_score: [],\n      scores_score: []\n    };\n  }\n\n  componentDidMount() {\n    let lista = [];\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://opentdb.com/api.php?amount=10\") //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n    .then(response => response.json()) //.then(data => console.log(data))\n    .then(data => {\n      this.state.quiz.push(data);\n      data.results[0].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      lista.push(data.results[0].correct_answer);\n      this.makeSuffle(lista);\n      this.setState({\n        loading: false,\n        listAnwser: lista,\n        quiz: data\n      }); //results[i] para cada resultado\n\n      this.setState({\n        question: this.state.quiz.results[0].question\n      });\n      this.setState({\n        correct_answer: this.state.quiz.results[0].correct_answer\n      }); // this.setState({category:this.state.quiz[0].results[0].category})\n      // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n      // this.setState({type:this.state.quiz[0].results[0].type})   \n    });\n    this.createScore();\n  }\n\n  creatJsonCategory() {\n    console.log(\"entrou creatJsonCategory\"); // var x = document.getElementById(\"mySelect\").value;\n    // console.log(x)\n    // document.getElementById(\"textCategory\").innerHTML = \"You selected: \" + x;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  makeSuffle(lista) {\n    for (var i = lista.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = lista[i];\n      lista[i] = lista[j];\n      lista[j] = temp;\n    }\n  }\n\n  render() {\n    // const frist = \"primeiro\"\n    // const second = \"segundo\"\n    const date = new Date();\n    const hours = date.getHours();\n    let timeOfDay;\n\n    if (hours < 12) {\n      timeOfDay = \"morning\";\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = \"afternon\";\n    } else {\n      timeOfDay = \"night\";\n    }\n\n    const text = this.state.loading ? \"loading...\" : this.state.quiz.question; //console.log(this.state.question)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Good \", timeOfDay, \"!! Let's play trivia?\")), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Question, {\n      question: this.state.question,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[0],\n      style: {\n        display: !this.state.listAnwser[0] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, this.state.listAnwser[0]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[1],\n      style: {\n        display: !this.state.listAnwser[1] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, this.state.listAnwser[1]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[2],\n      style: {\n        display: !this.state.listAnwser[2] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, this.state.listAnwser[2]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[3],\n      style: {\n        display: !this.state.listAnwser[3] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, this.state.listAnwser[3]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Quantidade de acertos: \", this.state.id, \" \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(Highscore, {\n      scores: this.state.usuarios_score,\n      usuarios: this.state.scores_score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/node/trivia/src/App.js"],"names":["React","Component","Question","Highscore","App","constructor","createJson","lista","console","log","setState","loading","fetch","then","response","json","data","state","quiz","results","incorrect_answers","map","incorrect","push","correct_answer","makeSuffle","listAnwser","clicked","event","currentTarget","name","checkAnswer","createSetState","id","correct","question","answer","id_novo","alert","a","createScore","listaUsuarios","listaScores","highscore","usuarios_score","scores_score","i","score","usuario","category","difficulty","type","componentDidMount","creatJsonCategory","handleSubmit","preventDefault","length","j","Math","floor","random","temp","render","date","Date","hours","getHours","timeOfDay","text","display"],"mappings":"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","sourcesContent":["//colocar high score\n//mostrar numero de acertos\n//mostrar a resposta certa quando a pessoa errar\n//mostrar a categoria\n\n//deixar a pessoa escolher a categoria\n\nimport React, {Component} from \"react\";\n// import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\nimport Question from  \"./components/Question\";\nimport Highscore from  \"./components/Highscore\";\n\nimport \"./App.css\";\n//import { qualifiedTypeIdentifier } from \"@babel/types\";\n//import { list } from \"postcss\"; \n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state={\n            loading: false,\n            quiz: [],\n            listAnwser: [],\n            category: \"\",\n            question: \"\",\n            correct_answer: \"\",\n            id: 0,\n            difficulty: \"\",\n            type: \"\" ,\n            highscore: [],\n            usuario: \"\",\n            score: \"\",\n            usuarios_score: [],\n            scores_score: []\n        }\n    }\n\n    componentDidMount() {\n        let lista = []\n        this.setState({loading : true})\n        fetch(\"https://opentdb.com/api.php?amount=10\")\n        //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n\n            .then(response => response.json())\n            //.then(data => console.log(data))\n            .then(data => { \n                this.state.quiz.push(data)\n                data.results[0].incorrect_answers.map(\n                    incorrect=>{lista.push(incorrect)\n                })\n                lista.push(data.results[0].correct_answer)   \n                this.makeSuffle(lista)                \n\n                this.setState({\n                    loading: false,\n                    listAnwser : lista,\n                    quiz : data\n                })\n                //results[i] para cada resultado\n                this.setState({question:this.state.quiz.results[0].question})\n                this.setState({correct_answer:this.state.quiz.results[0].correct_answer})\n                // this.setState({category:this.state.quiz[0].results[0].category})\n                // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n                // this.setState({type:this.state.quiz[0].results[0].type})   \n            })\n            this.createScore()\n           \n    }\n\n\n    createJson = async ()=> {let lista = []\n        console.log(\"AAAA\")\n        this.setState({loading : true})\n        await fetch(\"https://opentdb.com/api.php?amount=10\")\n\n\n            .then(response => response.json())\n            //.then(data => console.log(data))   \n            .then(data => { \n                console.log(data)\n                console.log(this.state.quiz)\n                //this.state.quiz.push(data)\n                data.results[0].incorrect_answers.map(\n                    incorrect=>{lista.push(incorrect)\n                })\n                console.log(data)\n                lista.push(data.results[0].correct_answer)   \n                this.makeSuffle(lista)                \n\n                this.setState({\n                    loading: false,\n                    listAnwser : lista,\n                    quiz : data,\n                    \n                })\n            })\n            return true\n    } \n    \n    clicked = (event) => {\n        console.log(event.currentTarget.name)\n        \n        if (this.checkAnswer(event.currentTarget.name)){\n            this.createSetState()\n        }\n        //else: parte do game over\n    }\n\n    creatJsonCategory () {\n        console.log(\"entrou creatJsonCategory\")\n        // var x = document.getElementById(\"mySelect\").value;\n        // console.log(x)\n        // document.getElementById(\"textCategory\").innerHTML = \"You selected: \" + x;\n    \n    }\n\n    createSetState = () => {\n        console.log(\"entrou no create state\")\n        console.log(this.state.id +1) //pois o primeiro foi no componentdidmout\n        let lista = []\n        this.state.quiz.results[this.state.id+1].incorrect_answers.map( \n            incorrect=>{lista.push(incorrect)})\n            \n        let correct = this.state.quiz.results[this.state.id+1].correct_answer\n        console.log(correct)\n        lista.push(correct)\n\n        this.makeSuffle(lista)\n\n        this.setState({\n            question:this.state.quiz.results[this.state.id+1].question,\n            correct_answer:this.state.quiz.results[this.state.id+1].correct_answer,\n            listAnwser: lista  \n        })\n    }\n\n    checkAnswer = async (answer)=>{\n        if (answer === this.state.correct_answer){\n            let id_novo = this.state.id + 1\n            this.setState({id:id_novo})\n            console.log(\"ACERTO\")\n            //clicked chamao checkAnswer e se true chama createSetState\n            return true\n        }\n        else {\n            console.log(\"ERROU\")\n            alert(\"Wrong answer. Game over.                                                         The correct answes was: \" + this.state.correct_answer)\n            alert(\"The correct answes was: \" + this.state.correct_answer)\n            //var name = prompt(\"GREAT! You are in the top 10, type your name:\");\n            //console.log(name)\n            //zerar o id \n            let id_novo = 0\n            console.log(id_novo)\n            this.setState({id:id_novo})\n            let a = await this.createJson() \n            console.log(this.state.quiz)\n            console.log(this.state.quiz.results[0].question)\n            this.setState({question:this.state.quiz.results[0].question})\n            this.setState({correct_answer:this.state.quiz.results[0].correct_answer})\n                \n                return false \n        }\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n\n    }\n\n    makeSuffle(lista){\n        for (var i = lista.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = lista[i];\n            lista[i] = lista[j];\n            lista[j] = temp;\n        }\n    }\n\n    createScore = async ()=> {\n        let listaUsuarios = []\n        let listaScores = []\n        \n\n        //console.log(\"entrou no createScore\")\n        this.setState({loading : true})\n        await fetch(\"http://localhost:4000/highscore\")\n            .then(response => response.json())\n            //.then(data => console.log(data))   \n            .then(data => { \n                this.setState({\n                    highscore : data,\n                    usuarios_score : listaUsuarios,\n                    scores_score : listaScores\n                })\n                //console.log(data)    \n                //his.state.highscore.push(data)\n                //console.log(this.state.highscore.data[0].usuario)\n                \n                for (var i=0; i<10; i++){\n                    // console.log(i)\n                    // console.log(this.state.highscore.data[i].usuario)\n                    listaUsuarios.push(this.state.highscore.data[i].score)\n                    listaScores.push(this.state.highscore.data[i].usuario)\n                }\n                // console.log(this.state.usuarios_score)\n                // console.log(this.state.scores_score)\n\n            \n              //data[i] para mudar os dados\n                // console.log(this.state.highscore.data[0].usuario)\n                // console.log(this.state.highscore.data[0].score)\n                \n\n               \n                // console.log(usuarios_score)\n                // console.log(scores_score)\n                //console.log(this.state.highscore)\n\n                // this.setState({usuario:this.state.highscore.data[0].usuario})\n                // this.setState({score:this.state.highscore.data[0].score})\n    \n            })\n            return true\n    } \n    \n    render() {\n        // const frist = \"primeiro\"\n        // const second = \"segundo\"\n        const date = new Date()\n        const hours = date.getHours()\n        let timeOfDay\n\n        if (hours<12){\n            timeOfDay = \"morning\"\n        } else if (hours>=12 && hours <17){\n            timeOfDay = \"afternon\"\n        } else {\n            timeOfDay = \"night\"\n        }\n\n        const text = this.state.loading ? \"loading...\" : this.state.quiz.question\n        //console.log(this.state.question)\n        return( \n            \n            <div>\n                <nav>\n                {/* <h1>teste {frist + \" \" + second }</h1>\n                <h2>oalaa {`${frist}`}</h2> */}\n                \n                <h3>Good {timeOfDay}!! Let's play trivia?</h3>\n                {/* <Header/>\n                <Footer/>*/}\n                </nav>\n                <main>\n                \n                {/* <h6>Choose the type: </h6>\n                <select id=\"mySelect\" onChange=\"creatJsonCategory()\">\n                    <option value=\"anyType\">Any category</option>\n                    <option value=\"multiple\">Multiple Choiche</option> \n                    <option value=\"boolean\">True / False</option>\n                </select>\n                <h6 id=\"textCategory\"></h6> */}\n                \n                <Question question={this.state.question} id={this.state.id}/>\n\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[0]} style={{display: !this.state.listAnwser[0] && \"none\"}}>{this.state.listAnwser[0]}</button>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[1]}  style={{display: !this.state.listAnwser[1] && \"none\"}}>{this.state.listAnwser[1]}</button>\n                <br/><br/>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[2]}  style={{display: !this.state.listAnwser[2] && \"none\"}}>{this.state.listAnwser[2]}</button>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[3]}  style={{display: !this.state.listAnwser[3] && \"none\"}}>{this.state.listAnwser[3]}</button>\n                               \n                <br></br><br></br> \n\n                <h5>Quantidade de acertos: {this.state.id} </h5>\n                <hr/>  \n                \n                <Highscore scores={this.state.usuarios_score} usuarios={this.state.scores_score}/>\n\n\n                {/* <button disabled type=\"button\"> {this.state.id} </button>\n             */}\n                {/* <h4>{JSON.stringify(this.state.quiz[0])}</h4> */}\n                </main>\n            </div> \n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}