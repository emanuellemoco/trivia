{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\trivia\\\\src\\\\App.js\";\nimport React, { Component } from \"react\"; // import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\n\nimport Question from \"./components/Question\";\nimport \"./App.css\"; //import { qualifiedTypeIdentifier } from \"@babel/types\";\n//import { list } from \"postcss\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.clicked = event => {\n      console.log(event.currentTarget.name);\n\n      if (this.checkAnswer(event.currentTarget.name)) {\n        this.createSetState();\n      } //parte do game over\n\n    };\n\n    this.createSetState = () => {\n      let lista = [];\n      this.state.quiz[0].results[this.state.id].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      let correct = this.state.quiz[0].results[this.state.id].correct_answer;\n      console.log(correct);\n      lista.push(correct);\n      this.makeSuffle(lista);\n      this.setState({\n        question: this.state.quiz[0].results[this.state.id].question,\n        correct_answer: this.state.quiz[0].results[this.state.id].correct_answer,\n        listAnwser: lista\n      });\n    };\n\n    this.state = {\n      loading: false,\n      quiz: [],\n      listAnwser: [],\n      category: \"\",\n      question: \"\",\n      correct_answer: \"\",\n      id: 0,\n      difficulty: \"\",\n      type: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let lista = [];\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://opentdb.com/api.php?amount=5\") //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n    .then(response => response.json()) //.then(data => console.log(data))\n    .then(data => {\n      this.state.quiz.push(data);\n      data.results[0].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      lista.push(data.results[0].correct_answer);\n      this.makeSuffle(lista);\n      this.setState({\n        loading: false,\n        listAnwser: lista,\n        quiz: this.state.quiz\n      });\n      console.log(this.state.quiz[0].results[0].correct_answer); //results[i] para cada resultad\n\n      this.setState({\n        question: this.state.quiz[0].results[0].question\n      }); // this.setState({category:this.state.quiz[0].results[0].category})\n\n      this.setState({\n        correct_answer: this.state.quiz[0].results[0].correct_answer\n      }); // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n      // this.setState({type:this.state.quiz[0].results[0].type})   \n    });\n  }\n\n  checkAnswer(answer) {\n    console.log(this.state.correct_answer);\n    console.log(answer);\n\n    if (answer === this.state.correct_answer) {\n      let id_novo = this.state.id + 1;\n      this.setState({\n        id: id_novo\n      });\n      console.log(\"ACERTO\"); //clicked chama o checkAnswer e se true chama createSetState\n\n      return true;\n    } else {\n      console.log(\"ERROU\");\n      alert(\"Wrong answer. Game over\"); //componentDidMount() // como rodar isso de novo?\n\n      return false;\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  makeSuffle(lista) {\n    for (var i = lista.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = lista[i];\n      lista[i] = lista[j];\n      lista[j] = temp;\n    }\n  }\n\n  render() {\n    // const frist = \"primeiro\"\n    // const second = \"segundo\"\n    const date = new Date();\n    const hours = date.getHours();\n    let timeOfDay;\n\n    if (hours < 12) {\n      timeOfDay = \"morning\";\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = \"afternon\";\n    } else {\n      timeOfDay = \"night\";\n    }\n\n    const text = this.state.loading ? \"loading...\" : this.state.quiz.question; //console.log(this.state.question)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Good \", timeOfDay, \"!! Let's play trivia?\")), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Question, {\n      question: this.state.question,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, text), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[0],\n      style: {\n        display: !this.state.listAnwser[0] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.listAnwser[0]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[1],\n      style: {\n        display: !this.state.listAnwser[1] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.listAnwser[1]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[2],\n      style: {\n        display: !this.state.listAnwser[2] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.listAnwser[2]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[3],\n      style: {\n        display: !this.state.listAnwser[3] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.listAnwser[3]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clickedStart,\n      type: \"submit\",\n      name: \"aaa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \" START \")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\node\\trivia\\src\\App.js"],"names":["React","Component","Question","App","constructor","clicked","event","console","log","currentTarget","name","checkAnswer","createSetState","lista","state","quiz","results","id","incorrect_answers","map","incorrect","push","correct","correct_answer","makeSuffle","setState","question","listAnwser","loading","category","difficulty","type","componentDidMount","fetch","then","response","json","data","answer","id_novo","alert","handleSubmit","preventDefault","i","length","j","Math","floor","random","temp","render","date","Date","hours","getHours","timeOfDay","text","display","clickedStart"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n// import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\nimport Question from  \"./components/Question\";\n\nimport \"./App.css\";\n//import { qualifiedTypeIdentifier } from \"@babel/types\";\n//import { list } from \"postcss\";\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state={\n            loading: false,\n            quiz: [],\n            listAnwser: [],\n            category: \"\",\n            question: \"\",\n            correct_answer: \"\",\n            id: 0,\n            difficulty: \"\",\n            type: \"\" \n        }\n    }\n    componentDidMount() {\n        let lista = []\n        this.setState({loading : true})\n        fetch(\"https://opentdb.com/api.php?amount=5\")\n    \n        //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n\n            .then(response => response.json())\n            //.then(data => console.log(data))\n            .then(data => { \n                this.state.quiz.push(data)\n                data.results[0].incorrect_answers.map(\n                    incorrect=>{lista.push(incorrect)\n                })\n                lista.push(data.results[0].correct_answer)   \n                this.makeSuffle(lista)                \n\n                this.setState({\n                    loading: false,\n                    listAnwser : lista,\n                    quiz : this.state.quiz\n                })\n                console.log(this.state.quiz[0].results[0].correct_answer)\n                //results[i] para cada resultad\n                \n                this.setState({question:this.state.quiz[0].results[0].question})\n                // this.setState({category:this.state.quiz[0].results[0].category})\n                this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n                // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n                // this.setState({type:this.state.quiz[0].results[0].type})   \n            })\n\n    }\n\n    clicked = (event) => {\n        console.log(event.currentTarget.name)\n        \n        if (this.checkAnswer(event.currentTarget.name)){\n            this.createSetState()\n        }\n        //parte do game over\n        \n    }\n\n    createSetState = () => {\n        let lista = []\n        this.state.quiz[0].results[this.state.id].incorrect_answers.map( \n            incorrect=>{lista.push(incorrect)})\n            \n        let correct = this.state.quiz[0].results[this.state.id].correct_answer\n        console.log(correct)\n        lista.push(correct)\n\n        this.makeSuffle(lista)\n\n        this.setState({\n            question:this.state.quiz[0].results[this.state.id].question,\n            correct_answer:this.state.quiz[0].results[this.state.id].correct_answer,\n            listAnwser: lista  \n        })\n    }\n\n    checkAnswer(answer){\n        console.log(this.state.correct_answer)\n        console.log(answer)\n        if (answer === this.state.correct_answer){\n            let id_novo = this.state.id + 1\n            this.setState({id:id_novo})\n            console.log(\"ACERTO\")\n            //clicked chama o checkAnswer e se true chama createSetState\n            return true\n        }\n        else {\n            console.log(\"ERROU\")\n            alert(\"Wrong answer. Game over\")\n            //componentDidMount() // como rodar isso de novo?\n                return false \n        }\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n\n    }\n\n    makeSuffle(lista){\n        for (var i = lista.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = lista[i];\n            lista[i] = lista[j];\n            lista[j] = temp;\n        }\n    }\n    \n\n    render() {\n        // const frist = \"primeiro\"\n        // const second = \"segundo\"\n        const date = new Date()\n        const hours = date.getHours()\n        let timeOfDay\n\n        if (hours<12){\n            timeOfDay = \"morning\"\n        } else if (hours>=12 && hours <17){\n            timeOfDay = \"afternon\"\n        } else {\n            timeOfDay = \"night\"\n        }\n\n        const text = this.state.loading ? \"loading...\" : this.state.quiz.question\n        //console.log(this.state.question)\n        return( \n            <div>\n                <nav>\n                {/* <h1>teste {frist + \" \" + second }</h1>\n                <h2>oalaa {`${frist}`}</h2> */}\n                \n                <h3>Good {timeOfDay}!! Let's play trivia?</h3>\n                {/* <Header/>\n                <Footer/>*/}\n                </nav>\n                <main>\n                \n                <Question question={this.state.question} id={this.state.id}/>\n\n                <p>{text}</p>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[0]} style={{display: !this.state.listAnwser[0] && \"none\"}}>{this.state.listAnwser[0]}</button>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[1]}  style={{display: !this.state.listAnwser[1] && \"none\"}}>{this.state.listAnwser[1]}</button>\n                <br/><br/>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[2]}  style={{display: !this.state.listAnwser[2] && \"none\"}}>{this.state.listAnwser[2]}</button>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[3]}  style={{display: !this.state.listAnwser[3] && \"none\"}}>{this.state.listAnwser[3]}</button>\n                               \n                <br></br><br></br>\n                <button onClick={this.clickedStart} type=\"submit\" name=\"aaa\"> START </button>\n\n                {/* <h4>{JSON.stringify(this.state.quiz[0])}</h4> */}\n                </main>\n            </div> \n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}