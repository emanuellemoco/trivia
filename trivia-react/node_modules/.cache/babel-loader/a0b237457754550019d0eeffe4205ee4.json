{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\trivia\\\\src\\\\App.js\";\n//colocar high score\n//mostrar numero de acertos\n//mostrar a resposta certa quando a pessoa errar\n//deixar a pessoa escolher a categoria\nimport React, { Component } from \"react\"; // import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\n\nimport Question from \"./components/Question\";\nimport Highscore from \"./components/Highscore\";\nimport \"./App.css\"; //import { qualifiedTypeIdentifier } from \"@babel/types\";\n//import { list } from \"postcss\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.createJson = async () => {\n      let lista = [];\n      console.log(\"AAAA\");\n      this.setState({\n        loading: true\n      });\n      await fetch(\"https://opentdb.com/api.php?amount=10\").then(response => response.json()) //.then(data => console.log(data)) \n      //\n      .then(data => {\n        this.state.quiz.push(data);\n        data.results[0].incorrect_answers.map(incorrect => {\n          lista.push(incorrect);\n        });\n        console.log(data);\n        lista.push(data.results[0].correct_answer);\n        this.makeSuffle(lista);\n        this.setState({\n          loading: false,\n          listAnwser: lista,\n          quiz: data\n        });\n        console.log(this.state.quiz[0]); //console.log(this.state.quiz[0].results[0].correct_answer)\n        //results[i] para cada resultado\n        //this.setState({question:this.state.quiz[0].results[0].question})\n        // this.setState({category:this.state.quiz[0].results[0].category})\n        //this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n        // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n        // this.setState({type:this.state.quiz[0].results[0].type})   \n      });\n      return true;\n    };\n\n    this.clicked = event => {\n      console.log(event.currentTarget.name);\n\n      if (this.checkAnswer(event.currentTarget.name)) {\n        this.createSetState();\n      } //else: parte do game over\n\n    };\n\n    this.createSetState = () => {\n      console.log(\"entrou no create state\");\n      console.log(this.state.id + 1); //pois o primeiro foi no componentdidmout\n\n      let lista = [];\n      this.state.quiz[0].results[this.state.id + 1].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      let correct = this.state.quiz[0].results[this.state.id + 1].correct_answer;\n      console.log(correct);\n      lista.push(correct);\n      this.makeSuffle(lista);\n      this.setState({\n        question: this.state.quiz[0].results[this.state.id + 1].question,\n        correct_answer: this.state.quiz[0].results[this.state.id + 1].correct_answer,\n        listAnwser: lista\n      });\n    };\n\n    this.checkAnswer = async answer => {\n      if (answer === this.state.correct_answer) {\n        let id_novo = this.state.id + 1;\n        this.setState({\n          id: id_novo\n        });\n        console.log(\"ACERTO\"); //clicked chamao checkAnswer e se true chama createSetState\n\n        return true;\n      } else {\n        console.log(\"ERROU\");\n        alert(\"Wrong answer. Game over\");\n        alert(\"The correct answes was: \" + this.state.correct_answer); //var name = prompt(\"GREAT! You are in the top 10, type your name:\");\n        //console.log(name)\n        //zerar o id \n\n        let id_novo = 0;\n        console.log(id_novo);\n        this.setState({\n          id: id_novo\n        });\n        let a = await this.createJson();\n        console.log(this.state.quiz);\n        console.log(this.state.quiz.results[0].question);\n        this.setState({\n          question: this.state.quiz[0].results[0].question\n        });\n        this.setState({\n          correct_answer: this.state.quiz[0].results[0].correct_answer\n        });\n        return false;\n      }\n    };\n\n    this.state = {\n      loading: false,\n      quiz: [],\n      listAnwser: [],\n      category: \"\",\n      question: \"\",\n      correct_answer: \"\",\n      id: 0,\n      difficulty: \"\",\n      type: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let lista = [];\n    console.log(\"AAAA\");\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://opentdb.com/api.php?amount=10\") //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n    .then(response => response.json()) //.then(data => console.log(data))\n    .then(data => {\n      this.state.quiz.push(data);\n      data.results[0].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      lista.push(data.results[0].correct_answer);\n      this.makeSuffle(lista);\n      this.setState({\n        loading: false,\n        listAnwser: lista,\n        quiz: this.state.quiz\n      });\n      console.log(this.state.quiz[0]);\n      console.log(this.state.quiz[0].results[0].correct_answer); //results[i] para cada resultado\n\n      this.setState({\n        question: this.state.quiz[0].results[0].question\n      }); // this.setState({category:this.state.quiz[0].results[0].category})\n\n      this.setState({\n        correct_answer: this.state.quiz[0].results[0].correct_answer\n      }); // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n      // this.setState({type:this.state.quiz[0].results[0].type})   \n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  makeSuffle(lista) {\n    for (var i = lista.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = lista[i];\n      lista[i] = lista[j];\n      lista[j] = temp;\n    }\n  }\n\n  render() {\n    // const frist = \"primeiro\"\n    // const second = \"segundo\"\n    const date = new Date();\n    const hours = date.getHours();\n    let timeOfDay;\n\n    if (hours < 12) {\n      timeOfDay = \"morning\";\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = \"afternon\";\n    } else {\n      timeOfDay = \"night\";\n    }\n\n    const text = this.state.loading ? \"loading...\" : this.state.quiz.question; //console.log(this.state.question)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Good \", timeOfDay, \"!! Let's play trivia?\")), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Question, {\n      question: this.state.question,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, text), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[0],\n      style: {\n        display: !this.state.listAnwser[0] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.state.listAnwser[0]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[1],\n      style: {\n        display: !this.state.listAnwser[1] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, this.state.listAnwser[1]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[2],\n      style: {\n        display: !this.state.listAnwser[2] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.state.listAnwser[2]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[3],\n      style: {\n        display: !this.state.listAnwser[3] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.state.listAnwser[3]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Quantidade de acertos: \", this.state.id, \" \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Highscore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\node\\trivia\\src\\App.js"],"names":["React","Component","Question","Highscore","App","constructor","createJson","lista","console","log","setState","loading","fetch","then","response","json","data","state","quiz","push","results","incorrect_answers","map","incorrect","correct_answer","makeSuffle","listAnwser","clicked","event","currentTarget","name","checkAnswer","createSetState","id","correct","question","answer","id_novo","alert","a","category","difficulty","type","componentDidMount","handleSubmit","preventDefault","i","length","j","Math","floor","random","temp","render","date","Date","hours","getHours","timeOfDay","text","display"],"mappings":"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","sourcesContent":["//colocar high score\n//mostrar numero de acertos\n//mostrar a resposta certa quando a pessoa errar\n\n//deixar a pessoa escolher a categoria\n\nimport React, {Component} from \"react\";\n// import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\nimport Question from  \"./components/Question\";\nimport Highscore from  \"./components/Highscore\";\n\nimport \"./App.css\";\n//import { qualifiedTypeIdentifier } from \"@babel/types\";\n//import { list } from \"postcss\";\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state={\n            loading: false,\n            quiz: [],\n            listAnwser: [],\n            category: \"\",\n            question: \"\",\n            correct_answer: \"\",\n            id: 0,\n            difficulty: \"\",\n            type: \"\" \n        }\n    }\n\n    createJson = async ()=> {let lista = []\n        console.log(\"AAAA\")\n        this.setState({loading : true})\n        await fetch(\"https://opentdb.com/api.php?amount=10\")\n\n\n            .then(response => response.json())\n            //.then(data => console.log(data)) \n            //\n            .then(data => { \n                this.state.quiz.push(data)\n                data.results[0].incorrect_answers.map(\n                    incorrect=>{lista.push(incorrect)\n                })\n                console.log(data)\n                lista.push(data.results[0].correct_answer)   \n                this.makeSuffle(lista)                \n\n                this.setState({\n                    loading: false,\n                    listAnwser : lista,\n                    quiz : data,\n                    \n                })\n                console.log(this.state.quiz[0])\n                //console.log(this.state.quiz[0].results[0].correct_answer)\n                \n                //results[i] para cada resultado\n                \n                //this.setState({question:this.state.quiz[0].results[0].question})\n                // this.setState({category:this.state.quiz[0].results[0].category})\n                //this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n                // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n                // this.setState({type:this.state.quiz[0].results[0].type})   \n            })\n            return true\n\n    } \n\n    componentDidMount() {\n        let lista = []\n        console.log(\"AAAA\")\n        this.setState({loading : true})\n        fetch(\"https://opentdb.com/api.php?amount=10\")\n\n    \n        //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n\n            .then(response => response.json())\n            //.then(data => console.log(data))\n            .then(data => { \n                this.state.quiz.push(data)\n                data.results[0].incorrect_answers.map(\n                    incorrect=>{lista.push(incorrect)\n                })\n                lista.push(data.results[0].correct_answer)   \n                this.makeSuffle(lista)                \n\n                this.setState({\n                    loading: false,\n                    listAnwser : lista,\n                    quiz : this.state.quiz\n                })\n                console.log(this.state.quiz[0])\n                console.log(this.state.quiz[0].results[0].correct_answer)\n                \n                //results[i] para cada resultado\n                \n                this.setState({question:this.state.quiz[0].results[0].question})\n                // this.setState({category:this.state.quiz[0].results[0].category})\n                this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n                // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n                // this.setState({type:this.state.quiz[0].results[0].type})   \n            })\n\n    }\n\n    \n    clicked = (event) => {\n        console.log(event.currentTarget.name)\n        \n        if (this.checkAnswer(event.currentTarget.name)){\n            this.createSetState()\n        }\n        //else: parte do game over\n        \n    }\n\n    createSetState = () => {\n        console.log(\"entrou no create state\")\n        console.log(this.state.id +1) //pois o primeiro foi no componentdidmout\n        let lista = []\n        this.state.quiz[0].results[this.state.id+1].incorrect_answers.map( \n            incorrect=>{lista.push(incorrect)})\n            \n        let correct = this.state.quiz[0].results[this.state.id+1].correct_answer\n        console.log(correct)\n        lista.push(correct)\n\n        this.makeSuffle(lista)\n\n        this.setState({\n            question:this.state.quiz[0].results[this.state.id+1].question,\n            correct_answer:this.state.quiz[0].results[this.state.id+1].correct_answer,\n            listAnwser: lista  \n        })\n    }\n\n    checkAnswer = async (answer)=>{\n        if (answer === this.state.correct_answer){\n            let id_novo = this.state.id + 1\n            this.setState({id:id_novo})\n            console.log(\"ACERTO\")\n            //clicked chamao checkAnswer e se true chama createSetState\n            return true\n        }\n        else {\n            console.log(\"ERROU\")\n            alert(\"Wrong answer. Game over\")\n            alert(\"The correct answes was: \" + this.state.correct_answer)\n            //var name = prompt(\"GREAT! You are in the top 10, type your name:\");\n            //console.log(name)\n            //zerar o id \n            let id_novo = 0\n            console.log(id_novo)\n            this.setState({id:id_novo})\n            let a = await this.createJson() \n            console.log(this.state.quiz)\n            console.log(this.state.quiz.results[0].question)\n            this.setState({question:this.state.quiz[0].results[0].question})\n            this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n                \n                return false \n        }\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n\n    }\n\n    makeSuffle(lista){\n        for (var i = lista.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = lista[i];\n            lista[i] = lista[j];\n            lista[j] = temp;\n        }\n    }\n    \n\n    render() {\n        // const frist = \"primeiro\"\n        // const second = \"segundo\"\n        const date = new Date()\n        const hours = date.getHours()\n        let timeOfDay\n\n        if (hours<12){\n            timeOfDay = \"morning\"\n        } else if (hours>=12 && hours <17){\n            timeOfDay = \"afternon\"\n        } else {\n            timeOfDay = \"night\"\n        }\n\n        const text = this.state.loading ? \"loading...\" : this.state.quiz.question\n        //console.log(this.state.question)\n        return( \n            \n            <div>\n                <nav>\n                {/* <h1>teste {frist + \" \" + second }</h1>\n                <h2>oalaa {`${frist}`}</h2> */}\n                \n                <h3>Good {timeOfDay}!! Let's play trivia?</h3>\n                {/* <Header/>\n                <Footer/>*/}\n                </nav>\n                <main>\n                \n                <Question question={this.state.question} id={this.state.id}/>\n                {/* <button onClick={this.clicked} type=\"submit\" name={this.state.question} style={{display: !this.state.question && \"none\"}}>{this.state.question}</button> */}\n\n\n                <p>{text}</p>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[0]} style={{display: !this.state.listAnwser[0] && \"none\"}}>{this.state.listAnwser[0]}</button>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[1]}  style={{display: !this.state.listAnwser[1] && \"none\"}}>{this.state.listAnwser[1]}</button>\n                <br/><br/>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[2]}  style={{display: !this.state.listAnwser[2] && \"none\"}}>{this.state.listAnwser[2]}</button>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[3]}  style={{display: !this.state.listAnwser[3] && \"none\"}}>{this.state.listAnwser[3]}</button>\n                               \n                <br></br><br></br> \n\n                <h5>Quantidade de acertos: {this.state.id} </h5>\n                <hr/>  \n                <Highscore />\n\n\n\n\n\n                {/* <button disabled type=\"button\"> {this.state.id} </button>\n             */}\n\n                {/* <h4>{JSON.stringify(this.state.quiz[0])}</h4> */}\n                </main>\n            </div> \n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}