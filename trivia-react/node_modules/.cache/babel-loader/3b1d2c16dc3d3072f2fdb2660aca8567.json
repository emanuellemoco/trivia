{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\trivia\\\\src\\\\App.js\";\nimport React, { Component } from \"react\"; // import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\n\nimport Question from \"./components/Question\";\nimport \"./App.css\"; //import { qualifiedTypeIdentifier } from \"@babel/types\";\n//import { list } from \"postcss\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.clickedStart = event => {\n      console.log(event.currentTarget.name);\n      this.createSetState();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"TESTE\"), React.createElement(Question, {\n        question: this.state.question,\n        id: this.state.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    };\n\n    this.clicked = event => {\n      console.log(event.currentTarget.name);\n\n      if (this.checkAnswer(event.currentTarget.name)) {\n        this.createSetState();\n      } //parte do game over\n\n    };\n\n    this.createSetState = () => {\n      console.log(\"entrou no create state\");\n      console.log(this.state.id + 1);\n      let lista = [];\n      this.state.quiz[0].results[this.state.id + 1].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      let correct = this.state.quiz[0].results[this.state.id + 1].correct_answer;\n      console.log(correct);\n      lista.push(correct);\n      this.makeSuffle(lista);\n      this.setState({\n        question: this.state.quiz[0].results[this.state.id + 1].question,\n        correct_answer: this.state.quiz[0].results[this.state.id + 1].correct_answer,\n        listAnwser: lista\n      });\n    };\n\n    this.state = {\n      loading: false,\n      quiz: [],\n      listAnwser: [],\n      category: \"\",\n      question: \"\",\n      correct_answer: \"\",\n      id: 0,\n      difficulty: \"\",\n      type: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let lista = [];\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://opentdb.com/api.php?amount=10\") //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n    .then(response => response.json()) //.then(data => console.log(data))\n    .then(data => {\n      this.state.quiz.push(data);\n      data.results[0].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      lista.push(data.results[0].correct_answer);\n      this.makeSuffle(lista);\n      this.setState({\n        loading: false,\n        listAnwser: lista,\n        quiz: this.state.quiz\n      });\n      console.log(this.state.quiz[0].results[0].correct_answer); //results[i] para cada resultad\n\n      this.setState({\n        question: this.state.quiz[0].results[0].question\n      }); // this.setState({category:this.state.quiz[0].results[0].category})\n\n      this.setState({\n        correct_answer: this.state.quiz[0].results[0].correct_answer\n      }); // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n      // this.setState({type:this.state.quiz[0].results[0].type})   \n    });\n  } //para fazer o set state inicial\n\n\n  checkAnswer(answer) {\n    if (answer === this.state.correct_answer) {\n      let id_novo = this.state.id + 1;\n      this.setState({\n        id: id_novo\n      });\n      console.log(\"ACERTO\"); //clicked chama o checkAnswer e se true chama createSetState\n\n      return true;\n    } else {\n      console.log(\"ERROU\");\n      alert(\"Wrong answer. Game over\"); //componentDidMount() // como rodar isso de novo?\n\n      return false;\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  makeSuffle(lista) {\n    for (var i = lista.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = lista[i];\n      lista[i] = lista[j];\n      lista[j] = temp;\n    }\n  }\n\n  render() {\n    // const frist = \"primeiro\"\n    // const second = \"segundo\"\n    const date = new Date();\n    const hours = date.getHours();\n    let timeOfDay;\n\n    if (hours < 12) {\n      timeOfDay = \"morning\";\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = \"afternon\";\n    } else {\n      timeOfDay = \"night\";\n    }\n\n    const text = this.state.loading ? \"loading...\" : this.state.quiz.question; //console.log(this.state.question)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Good \", timeOfDay, \"!! Let's play trivia?\")), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Question, {\n      question: this.state.question,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.question,\n      style: {\n        display: !this.state.question && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.question), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, text), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[0],\n      style: {\n        display: !this.state.listAnwser[0] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.listAnwser[0]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[1],\n      style: {\n        display: !this.state.listAnwser[1] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.listAnwser[1]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[2],\n      style: {\n        display: !this.state.listAnwser[2] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.listAnwser[2]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[3],\n      style: {\n        display: !this.state.listAnwser[3] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.listAnwser[3]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\node\\trivia\\src\\App.js"],"names":["React","Component","Question","App","constructor","clickedStart","event","console","log","currentTarget","name","createSetState","state","question","id","clicked","checkAnswer","lista","quiz","results","incorrect_answers","map","incorrect","push","correct","correct_answer","makeSuffle","setState","listAnwser","loading","category","difficulty","type","componentDidMount","fetch","then","response","json","data","answer","id_novo","alert","handleSubmit","preventDefault","i","length","j","Math","floor","random","temp","render","date","Date","hours","getHours","timeOfDay","text","display"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAsB,uBAAtB;AAEA,OAAO,WAAP,C,CACA;AACA;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACxBG,EAAAA,WAAW,GAAG;AACV;;AADU,SAiDdC,YAjDc,GAiDEC,KAAD,IAAW;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAN,CAAoBC,IAAhC;AACA,WAAKC,cAAL;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAA/B;AAAyC,QAAA,EAAE,EAAE,KAAKD,KAAL,CAAWE,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH,KA1Da;;AAAA,SA4DdC,OA5Dc,GA4DHT,KAAD,IAAW;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAN,CAAoBC,IAAhC;;AAEA,UAAI,KAAKM,WAAL,CAAiBV,KAAK,CAACG,aAAN,CAAoBC,IAArC,CAAJ,EAA+C;AAC3C,aAAKC,cAAL;AACH,OALgB,CAMjB;;AAEH,KApEa;;AAAA,SAsEdA,cAtEc,GAsEG,MAAM;AACnBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWE,EAAX,GAAe,CAA3B;AACA,UAAIG,KAAK,GAAG,EAAZ;AACA,WAAKL,KAAL,CAAWM,IAAX,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,KAAKP,KAAL,CAAWE,EAAX,GAAc,CAAzC,EAA4CM,iBAA5C,CAA8DC,GAA9D,CACIC,SAAS,IAAE;AAACL,QAAAA,KAAK,CAACM,IAAN,CAAWD,SAAX;AAAsB,OADtC;AAGA,UAAIE,OAAO,GAAG,KAAKZ,KAAL,CAAWM,IAAX,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,KAAKP,KAAL,CAAWE,EAAX,GAAc,CAAzC,EAA4CW,cAA1D;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,OAAZ;AACAP,MAAAA,KAAK,CAACM,IAAN,CAAWC,OAAX;AAEA,WAAKE,UAAL,CAAgBT,KAAhB;AAEA,WAAKU,QAAL,CAAc;AACVd,QAAAA,QAAQ,EAAC,KAAKD,KAAL,CAAWM,IAAX,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,KAAKP,KAAL,CAAWE,EAAX,GAAc,CAAzC,EAA4CD,QAD3C;AAEVY,QAAAA,cAAc,EAAC,KAAKb,KAAL,CAAWM,IAAX,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,KAAKP,KAAL,CAAWE,EAAX,GAAc,CAAzC,EAA4CW,cAFjD;AAGVG,QAAAA,UAAU,EAAEX;AAHF,OAAd;AAKH,KAxFa;;AAEV,SAAKL,KAAL,GAAW;AACPiB,MAAAA,OAAO,EAAE,KADF;AAEPX,MAAAA,IAAI,EAAE,EAFC;AAGPU,MAAAA,UAAU,EAAE,EAHL;AAIPE,MAAAA,QAAQ,EAAE,EAJH;AAKPjB,MAAAA,QAAQ,EAAE,EALH;AAMPY,MAAAA,cAAc,EAAE,EANT;AAOPX,MAAAA,EAAE,EAAE,CAPG;AAQPiB,MAAAA,UAAU,EAAE,EARL;AASPC,MAAAA,IAAI,EAAE;AATC,KAAX;AAWH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIhB,KAAK,GAAG,EAAZ;AACA,SAAKU,QAAL,CAAc;AAACE,MAAAA,OAAO,EAAG;AAAX,KAAd;AACAK,IAAAA,KAAK,CAAC,uCAAD,CAAL,CAEA;AAFA,KAIKC,IAJL,CAIUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJtB,EAKI;AALJ,KAMKF,IANL,CAMUG,IAAI,IAAI;AACV,WAAK1B,KAAL,CAAWM,IAAX,CAAgBK,IAAhB,CAAqBe,IAArB;AACAA,MAAAA,IAAI,CAACnB,OAAL,CAAa,CAAb,EAAgBC,iBAAhB,CAAkCC,GAAlC,CACIC,SAAS,IAAE;AAACL,QAAAA,KAAK,CAACM,IAAN,CAAWD,SAAX;AACf,OAFD;AAGAL,MAAAA,KAAK,CAACM,IAAN,CAAWe,IAAI,CAACnB,OAAL,CAAa,CAAb,EAAgBM,cAA3B;AACA,WAAKC,UAAL,CAAgBT,KAAhB;AAEA,WAAKU,QAAL,CAAc;AACVE,QAAAA,OAAO,EAAE,KADC;AAEVD,QAAAA,UAAU,EAAGX,KAFH;AAGVC,QAAAA,IAAI,EAAG,KAAKN,KAAL,CAAWM;AAHR,OAAd;AAKAX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWM,IAAX,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,CAA3B,EAA8BM,cAA1C,EAbU,CAcV;;AAEA,WAAKE,QAAL,CAAc;AAACd,QAAAA,QAAQ,EAAC,KAAKD,KAAL,CAAWM,IAAX,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,CAA3B,EAA8BN;AAAxC,OAAd,EAhBU,CAiBV;;AACA,WAAKc,QAAL,CAAc;AAACF,QAAAA,cAAc,EAAC,KAAKb,KAAL,CAAWM,IAAX,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,CAA3B,EAA8BM;AAA9C,OAAd,EAlBU,CAmBV;AACA;AACH,KA3BL;AA6BH,GA/CuB,CAiDxB;;;AA0CAT,EAAAA,WAAW,CAACuB,MAAD,EAAQ;AACf,QAAIA,MAAM,KAAK,KAAK3B,KAAL,CAAWa,cAA1B,EAAyC;AACrC,UAAIe,OAAO,GAAG,KAAK5B,KAAL,CAAWE,EAAX,GAAgB,CAA9B;AACA,WAAKa,QAAL,CAAc;AAACb,QAAAA,EAAE,EAAC0B;AAAJ,OAAd;AACAjC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAHqC,CAIrC;;AACA,aAAO,IAAP;AACH,KAND,MAOK;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAiC,MAAAA,KAAK,CAAC,yBAAD,CAAL,CAFC,CAGD;;AACI,aAAO,KAAP;AACP;AACJ;;AAEDC,EAAAA,YAAY,CAACpC,KAAD,EAAO;AACfA,IAAAA,KAAK,CAACqC,cAAN;AAEH;;AAEDjB,EAAAA,UAAU,CAACT,KAAD,EAAO;AACb,SAAK,IAAI2B,CAAC,GAAG3B,KAAK,CAAC4B,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,UAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,UAAIM,IAAI,GAAGjC,KAAK,CAAC2B,CAAD,CAAhB;AACA3B,MAAAA,KAAK,CAAC2B,CAAD,CAAL,GAAW3B,KAAK,CAAC6B,CAAD,CAAhB;AACA7B,MAAAA,KAAK,CAAC6B,CAAD,CAAL,GAAWI,IAAX;AACH;AACJ;;AAGDC,EAAAA,MAAM,GAAG;AACL;AACA;AACA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAd;AACA,QAAIC,SAAJ;;AAEA,QAAIF,KAAK,GAAC,EAAV,EAAa;AACTE,MAAAA,SAAS,GAAG,SAAZ;AACH,KAFD,MAEO,IAAIF,KAAK,IAAE,EAAP,IAAaA,KAAK,GAAE,EAAxB,EAA2B;AAC9BE,MAAAA,SAAS,GAAG,UAAZ;AACH,KAFM,MAEA;AACHA,MAAAA,SAAS,GAAG,OAAZ;AACH;;AAED,UAAMC,IAAI,GAAG,KAAK7C,KAAL,CAAWiB,OAAX,GAAqB,YAArB,GAAoC,KAAKjB,KAAL,CAAWM,IAAX,CAAgBL,QAAjE,CAfK,CAgBL;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU2C,SAAV,0BAJA,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWC,QAA/B;AAAyC,MAAA,EAAE,EAAE,KAAKD,KAAL,CAAWE,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA;AAAQ,MAAA,OAAO,EAAE,KAAKC,OAAtB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,QAA9D;AAAwE,MAAA,KAAK,EAAE;AAAC6C,QAAAA,OAAO,EAAE,CAAC,KAAK9C,KAAL,CAAWC,QAAZ,IAAwB;AAAlC,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2H,KAAKD,KAAL,CAAWC,QAAtI,CAHA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI4C,IAAJ,CANA,EAOA;AAAQ,MAAA,OAAO,EAAE,KAAK1C,OAAtB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAnD;AAA6E,MAAA,KAAK,EAAE;AAAC8B,QAAAA,OAAO,EAAE,CAAC,KAAK9C,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAD,IAA6B;AAAvC,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqI,KAAKhB,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAArI,CAPA,EAQA;AAAQ,MAAA,OAAO,EAAE,KAAKb,OAAtB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAnD;AAA8E,MAAA,KAAK,EAAE;AAAC8B,QAAAA,OAAO,EAAE,CAAC,KAAK9C,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAD,IAA6B;AAAvC,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsI,KAAKhB,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAtI,CARA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,EASK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATL,EAUA;AAAQ,MAAA,OAAO,EAAE,KAAKb,OAAtB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAnD;AAA8E,MAAA,KAAK,EAAE;AAAC8B,QAAAA,OAAO,EAAE,CAAC,KAAK9C,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAD,IAA6B;AAAvC,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsI,KAAKhB,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAtI,CAVA,EAWA;AAAQ,MAAA,OAAO,EAAE,KAAKb,OAAtB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAnD;AAA8E,MAAA,KAAK,EAAE;AAAC8B,QAAAA,OAAO,EAAE,CAAC,KAAK9C,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAD,IAA6B;AAAvC,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsI,KAAKhB,KAAL,CAAWgB,UAAX,CAAsB,CAAtB,CAAtI,CAXA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,EAaS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbT,CATJ,CADJ;AA8BH;;AAzKuB;;AA4K5B,eAAezB,GAAf","sourcesContent":["import React, {Component} from \"react\";\n// import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\nimport Question from  \"./components/Question\";\n\nimport \"./App.css\";\n//import { qualifiedTypeIdentifier } from \"@babel/types\";\n//import { list } from \"postcss\";\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state={\n            loading: false,\n            quiz: [],\n            listAnwser: [],\n            category: \"\",\n            question: \"\",\n            correct_answer: \"\",\n            id: 0,\n            difficulty: \"\",\n            type: \"\" \n        }\n    }\n    componentDidMount() {\n        let lista = []\n        this.setState({loading : true})\n        fetch(\"https://opentdb.com/api.php?amount=10\")\n    \n        //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n\n            .then(response => response.json())\n            //.then(data => console.log(data))\n            .then(data => { \n                this.state.quiz.push(data)\n                data.results[0].incorrect_answers.map(\n                    incorrect=>{lista.push(incorrect)\n                })\n                lista.push(data.results[0].correct_answer)   \n                this.makeSuffle(lista)                \n\n                this.setState({\n                    loading: false,\n                    listAnwser : lista,\n                    quiz : this.state.quiz\n                })\n                console.log(this.state.quiz[0].results[0].correct_answer)\n                //results[i] para cada resultad\n                \n                this.setState({question:this.state.quiz[0].results[0].question})\n                // this.setState({category:this.state.quiz[0].results[0].category})\n                this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n                // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n                // this.setState({type:this.state.quiz[0].results[0].type})   \n            })\n\n    }\n\n    //para fazer o set state inicial\n    clickedStart = (event) => {\n        console.log(event.currentTarget.name)\n        this.createSetState()\n        return (\n            <div>\n                <h1>TESTE</h1>\n                <Question question={this.state.question} id={this.state.id}/>\n            </div>\n        )\n    }\n    \n    clicked = (event) => {\n        console.log(event.currentTarget.name)\n        \n        if (this.checkAnswer(event.currentTarget.name)){\n            this.createSetState()\n        }\n        //parte do game over\n        \n    }\n\n    createSetState = () => {\n        console.log(\"entrou no create state\")\n        console.log(this.state.id +1)\n        let lista = []\n        this.state.quiz[0].results[this.state.id+1].incorrect_answers.map( \n            incorrect=>{lista.push(incorrect)})\n            \n        let correct = this.state.quiz[0].results[this.state.id+1].correct_answer\n        console.log(correct)\n        lista.push(correct)\n\n        this.makeSuffle(lista)\n\n        this.setState({\n            question:this.state.quiz[0].results[this.state.id+1].question,\n            correct_answer:this.state.quiz[0].results[this.state.id+1].correct_answer,\n            listAnwser: lista  \n        })\n    }\n\n    checkAnswer(answer){\n        if (answer === this.state.correct_answer){\n            let id_novo = this.state.id + 1\n            this.setState({id:id_novo})\n            console.log(\"ACERTO\")\n            //clicked chama o checkAnswer e se true chama createSetState\n            return true\n        }\n        else {\n            console.log(\"ERROU\")\n            alert(\"Wrong answer. Game over\")\n            //componentDidMount() // como rodar isso de novo?\n                return false \n        }\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n\n    }\n\n    makeSuffle(lista){\n        for (var i = lista.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = lista[i];\n            lista[i] = lista[j];\n            lista[j] = temp;\n        }\n    }\n    \n\n    render() {\n        // const frist = \"primeiro\"\n        // const second = \"segundo\"\n        const date = new Date()\n        const hours = date.getHours()\n        let timeOfDay\n\n        if (hours<12){\n            timeOfDay = \"morning\"\n        } else if (hours>=12 && hours <17){\n            timeOfDay = \"afternon\"\n        } else {\n            timeOfDay = \"night\"\n        }\n\n        const text = this.state.loading ? \"loading...\" : this.state.quiz.question\n        //console.log(this.state.question)\n        return( \n            <div>\n                <nav>\n                {/* <h1>teste {frist + \" \" + second }</h1>\n                <h2>oalaa {`${frist}`}</h2> */}\n                \n                <h3>Good {timeOfDay}!! Let's play trivia?</h3>\n                {/* <Header/>\n                <Footer/>*/}\n                </nav>\n                <main>\n                \n                <Question question={this.state.question} id={this.state.id}/>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.question} style={{display: !this.state.question && \"none\"}}>{this.state.question}</button>\n\n\n                <p>{text}</p>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[0]} style={{display: !this.state.listAnwser[0] && \"none\"}}>{this.state.listAnwser[0]}</button>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[1]}  style={{display: !this.state.listAnwser[1] && \"none\"}}>{this.state.listAnwser[1]}</button>\n                <br/><br/>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[2]}  style={{display: !this.state.listAnwser[2] && \"none\"}}>{this.state.listAnwser[2]}</button>\n                <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[3]}  style={{display: !this.state.listAnwser[3] && \"none\"}}>{this.state.listAnwser[3]}</button>\n                               \n                <br></br><br></br> \n                {/* <button onClick={this.clickedStart} type=\"submit\" name=\"start\"> START </button> */}\n\n                {/* <h4>{JSON.stringify(this.state.quiz[0])}</h4> */}\n                </main>\n            </div> \n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}