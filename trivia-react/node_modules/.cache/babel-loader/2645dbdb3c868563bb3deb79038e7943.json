{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\trivia\\\\src\\\\App.js\";\nimport React, { Component } from \"react\"; // import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\n//import api from \"./services/api\";\n\nimport Alternatives from \"./components/Alternatives\";\nimport Question from \"./components/Question\";\nimport \"./App.css\"; //import { list } from \"postcss\";\n//import { timeout } from \"q\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      quiz: [],\n      listAnwser: [],\n      category: \"\",\n      question: \"\",\n      correct_answer: \"\",\n      incorrect_answers1: \"\",\n      incorrect_answers2: \"\",\n      incorrect_answers3: \"\",\n      difficulty: \"\",\n      type: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let lista = [];\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://opentdb.com/api.php?amount=5\").then(response => response.json()) //.then(data => console.log(data))\n    .then(data => {\n      console.log(data);\n      this.state.quiz.push(data);\n      data.results[0].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      lista.push(data.results[0].correct_answer);\n      this.setState({\n        loading: false,\n        listAnwser: lista,\n        quiz: this.state.quiz\n      }); //console.log(this.state.quiz[0].results[0])\n      //results[i] para cada resultado\n\n      this.setState({\n        question: this.state.quiz[0].results[0].question\n      });\n      this.setState({\n        category: this.state.quiz[0].results[0].category\n      });\n      this.setState({\n        correct_answer: this.state.quiz[0].results[0].correct_answer\n      });\n      this.setState({\n        difficulty: this.state.quiz[0].results[0].difficulty\n      });\n      this.setState({\n        type: this.state.quiz[0].results[0].type\n      });\n    });\n  }\n\n  render() {\n    // const frist = \"primeiro\"\n    // const second = \"segundo\"\n    const date = new Date();\n    const hours = date.getHours();\n    let timeOfDay;\n\n    if (hours < 12) {\n      timeOfDay = \"mornig\";\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = \"afternon\";\n    } else {\n      timeOfDay = \"night\";\n    }\n\n    const text = this.state.loading ? \"loading...\" : this.state.quiz.question;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Good \", timeOfDay, \"!! Let's play trivia?\")), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, text), React.createElement(Question, {\n      question: this.state.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.state.listAnwser[0], React.createElement(Alternatives, {\n      answer: this.state.listAnwser[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Alternatives, {\n      answer: this.state.listAnwser[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Alternatives, {\n      answer: this.state.listAnwser[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Alternatives, {\n      answer: this.state.listAnwser[3],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\node\\trivia\\src\\App.js"],"names":["React","Component","Alternatives","Question","App","constructor","state","loading","quiz","listAnwser","category","question","correct_answer","incorrect_answers1","incorrect_answers2","incorrect_answers3","difficulty","type","componentDidMount","lista","setState","fetch","then","response","json","data","console","log","push","results","incorrect_answers","map","incorrect","render","date","Date","hours","getHours","timeOfDay","text"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n// import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\n//import api from \"./services/api\";\nimport Alternatives from  \"./components/Alternatives\";\nimport Question from  \"./components/Question\";\n\nimport \"./App.css\";\n//import { list } from \"postcss\";\n//import { timeout } from \"q\";\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state={\n            loading: false,\n            quiz: [],\n            listAnwser: [],\n            category: \"\",\n            question: \"\",\n            correct_answer: \"\",\n            incorrect_answers1: \"\",\n            incorrect_answers2: \"\",\n            incorrect_answers3: \"\",\n            difficulty: \"\",\n            type: \"\" \n        }\n    }\n    componentDidMount() {\n        let lista = []\n        this.setState({loading : true})\n        fetch(\"https://opentdb.com/api.php?amount=5\")\n\n            .then(response => response.json())\n            //.then(data => console.log(data))\n            .then(data => {\n                console.log(data)\n                this.state.quiz.push(data)\n                data.results[0].incorrect_answers.map(\n                    incorrect=>{lista.push(incorrect)\n                })\n                lista.push(data.results[0].correct_answer)\n\n                this.setState({\n                    loading: false,\n                    listAnwser : lista,\n                    quiz : this.state.quiz\n                })\n                //console.log(this.state.quiz[0].results[0])\n                //results[i] para cada resultado\n                this.setState({question:this.state.quiz[0].results[0].question})\n                this.setState({category:this.state.quiz[0].results[0].category})\n                this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n                this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n                this.setState({type:this.state.quiz[0].results[0].type})   \n            })\n\n    }\n    render() {\n        // const frist = \"primeiro\"\n        // const second = \"segundo\"\n\n        const date = new Date()\n        const hours = date.getHours()\n        let timeOfDay\n\n        if (hours<12){\n            timeOfDay = \"mornig\"\n        } else if (hours>=12 && hours <17){\n            timeOfDay = \"afternon\"\n        } else {\n            timeOfDay = \"night\"\n        }\n\n        const text = this.state.loading ? \"loading...\" : this.state.quiz.question\n        \n        return( \n            <div>\n                <nav>\n                {/* <h1>teste {frist + \" \" + second }</h1>\n                <h2>olar {`${frist}`}</h2> */}\n                \n                <h3>Good {timeOfDay}!! Let's play trivia?</h3>\n                {/* <Header/>\n                <Footer/> */}\n\n                </nav>\n                <main>\n                <p>{text}</p>\n                <Question question={this.state.question}/>\n                \n                {/* fazer um for  com um random pra printar as alternativas */}\n\n                    {this.state.listAnwser[0]}\n                <Alternatives answer={this.state.listAnwser[0]} />\n                <Alternatives answer={this.state.listAnwser[1]} />\n                <Alternatives answer={this.state.listAnwser[2]} />\n                <Alternatives answer={this.state.listAnwser[3]} />\n                \n                {/* <h4>{JSON.stringify(this.state.quiz[0])}</h4> */}\n                </main>\n            </div> \n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}