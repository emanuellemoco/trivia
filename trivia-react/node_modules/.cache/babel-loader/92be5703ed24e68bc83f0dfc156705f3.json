{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\trivia\\\\src\\\\App.js\";\nimport React, { Component } from \"react\"; // import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\n//import api from \"./services/api\";\n\nimport Alternatives from \"./components/Alternatives\";\nimport Question from \"./components/Question\";\nimport \"./App.css\"; //import { list } from \"postcss\";\n//import { timeout } from \"q\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      quiz: [],\n      listAnwser: [],\n      category: \"\",\n      question: \"\",\n      correct_answer: \"\",\n      id: 0,\n      difficulty: \"\",\n      type: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let lista = [];\n    this.setState({\n      loading: true\n    });\n    console.log(\"entrou no componentDidMount \");\n    fetch(\"https://opentdb.com/api.php?amount=5\") //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n    .then(response => response.json()) //.then(data => console.log(data))\n    .then(data => {\n      console.log(\"fetch\");\n      this.state.quiz.push(data);\n      data.results[0].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      lista.push(data.results[0].correct_answer);\n      this.makeSuffle(lista);\n      this.setState({\n        loading: false,\n        listAnwser: lista,\n        quiz: this.state.quiz\n      });\n      console.log(\"fora\"); //console.log(this.state.quiz[0].results[0])\n      //results[i] para cada resultad\n      //<Question question={this.state.question}/>\n\n      this.setState({\n        question: this.state.quiz[0].results[0].question\n      }); // this.setState({category:this.state.quiz[0].results[0].category})\n      // this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n      // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n      // this.setState({type:this.state.quiz[0].results[0].type})   \n    });\n  }\n\n  clicked(event) {\n    console.log(event); //if (this.checkAnswer(event.target.value)){\n  }\n\n  checkAnswer(answer) {\n    if (answer === this.state.correct_answer) {\n      let id_novo = this.state.id + 1;\n      this.setState({\n        id: id_novo\n      });\n      console.log(\"ACERTO\");\n      return true;\n    } else {\n      console.log(\"ERROU\"); // fim de jogo\n\n      return false;\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  makeSuffle(lista) {\n    for (var i = lista.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = lista[i];\n      lista[i] = lista[j];\n      lista[j] = temp;\n    }\n  }\n\n  render() {\n    // const frist = \"primeiro\"\n    // const second = \"segundo\"\n    console.log(\"AAAAAA\");\n    const date = new Date();\n    const hours = date.getHours();\n    let timeOfDay;\n\n    if (hours < 12) {\n      timeOfDay = \"morning\";\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = \"afternon\";\n    } else {\n      timeOfDay = \"night\";\n    }\n\n    const text = this.state.loading ? \"loading...\" : this.state.quiz.question;\n    console.log(\"---\");\n    console.log(this.state.question);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Good \", timeOfDay, \"!! Let's play trivia?\")), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, text), React.createElement(Question, {\n      question: this.state.question,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"answer\",\n      name: this.state.listAnwser,\n      style: {\n        display: !this.state.listAnwser && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.listAnwser[0]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"answer\",\n      name: this.state.listAnwser,\n      style: {\n        display: !this.state.listAnwser && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.listAnwser[1]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"answer\",\n      name: this.state.listAnwser,\n      style: {\n        display: !this.state.listAnwser && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.listAnwser[2]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"answer\",\n      name: this.state.listAnwser,\n      style: {\n        display: !this.state.listAnwser && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.listAnwser[3]))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\node\\trivia\\src\\App.js"],"names":["React","Component","Alternatives","Question","App","constructor","state","loading","quiz","listAnwser","category","question","correct_answer","id","difficulty","type","componentDidMount","lista","setState","console","log","fetch","then","response","json","data","push","results","incorrect_answers","map","incorrect","makeSuffle","clicked","event","checkAnswer","answer","id_novo","handleSubmit","preventDefault","i","length","j","Math","floor","random","temp","render","date","Date","hours","getHours","timeOfDay","text","display"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n// import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\n//import api from \"./services/api\";\nimport Alternatives from  \"./components/Alternatives\";\nimport Question from  \"./components/Question\";\n\nimport \"./App.css\";\n//import { list } from \"postcss\";\n//import { timeout } from \"q\";\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state={\n            loading: false,\n            quiz: [],\n            listAnwser: [],\n            category: \"\",\n            question: \"\",\n            correct_answer: \"\",\n            id: 0,\n            difficulty: \"\",\n            type: \"\" \n        }\n    }\n    componentDidMount() {\n        let lista = []\n        this.setState({loading : true})\n        console.log(\"entrou no componentDidMount \")\n        fetch(\"https://opentdb.com/api.php?amount=5\")\n    \n        //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n\n            .then(response => response.json())\n            //.then(data => console.log(data))\n            .then(data => {\n                console.log(\"fetch\")\n                this.state.quiz.push(data)\n                data.results[0].incorrect_answers.map(\n                    incorrect=>{lista.push(incorrect)\n                })\n                lista.push(data.results[0].correct_answer)   \n                this.makeSuffle(lista)                \n\n                this.setState({\n                    loading: false,\n                    listAnwser : lista,\n                    quiz : this.state.quiz\n                })\n\n                console.log(\"fora\")\n                //console.log(this.state.quiz[0].results[0])\n                //results[i] para cada resultad\n\n                //<Question question={this.state.question}/>\n                this.setState({question:this.state.quiz[0].results[0].question})\n                // this.setState({category:this.state.quiz[0].results[0].category})\n                // this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n                // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n                // this.setState({type:this.state.quiz[0].results[0].type})   \n            })\n\n    }\n\n    clicked(event){\n        console.log(event)\n        //if (this.checkAnswer(event.target.value)){\n            \n    }\n\n    checkAnswer(answer){\n        if (answer === this.state.correct_answer){\n            let id_novo = this.state.id + 1\n            this.setState({id:id_novo})\n            console.log(\"ACERTO\")\n            return true\n        }\n        else {\n            console.log(\"ERROU\")\n                // fim de jogo\n                return false \n\n        }\n\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n\n    }\n\n    makeSuffle(lista){\n        for (var i = lista.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = lista[i];\n            lista[i] = lista[j];\n            lista[j] = temp;\n        }\n    }\n    \n\n    render() {\n        // const frist = \"primeiro\"\n        // const second = \"segundo\"\n        console.log(\"AAAAAA\")\n\n        const date = new Date()\n        const hours = date.getHours()\n        let timeOfDay\n\n        if (hours<12){\n            timeOfDay = \"morning\"\n        } else if (hours>=12 && hours <17){\n            timeOfDay = \"afternon\"\n        } else {\n            timeOfDay = \"night\"\n        }\n\n        const text = this.state.loading ? \"loading...\" : this.state.quiz.question\n        console.log(\"---\")\n        console.log(this.state.question)\n        return( \n            <div>\n                <nav>\n                {/* <h1>teste {frist + \" \" + second }</h1>\n                <h2>oala {`${frist}`}</h2> */}\n                \n                <h3>Good {timeOfDay}!! Let's play trivia?</h3>\n                {/* <Header/>\n                <Footer/>nbhgfgh */}\n\n                </nav>\n                <main>\n                <p>{text}</p>\n\n                \n\n                <Question question={this.state.question} id={this.state.id}/>\n                <form onSubmit={this.handleSubmit}>\n                    <button onClick={this.clicked} type=\"answer\" name={this.state.listAnwser} style={{display: !this.state.listAnwser && \"none\"}}>{this.state.listAnwser[0]}</button>\n                    <button onClick={this.clicked} type=\"answer\" name={this.state.listAnwser}  style={{display: !this.state.listAnwser && \"none\"}}>{this.state.listAnwser[1]}</button>\n                    <button onClick={this.clicked} type=\"answer\" name={this.state.listAnwser}  style={{display: !this.state.listAnwser && \"none\"}}>{this.state.listAnwser[2]}</button>\n                    <button onClick={this.clicked} type=\"answer\" name={this.state.listAnwser}  style={{display: !this.state.listAnwser && \"none\"}}>{this.state.listAnwser[3]}</button>\n                </form>\n\n\n{/* \n                <Alternatives answer={this.state.listAnwser[0]} />\n                <Alternatives answer={this.state.listAnwser[1]} />\n                <Alternatives answer={this.state.listAnwser[2]} />\n                <Alternatives answer={this.state.listAnwser[3]} />\n\n                 */}\n                \n\n                {/* <h4>{JSON.stringify(this.state.quiz[0])}</h4> */}\n                </main>\n            </div> \n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}