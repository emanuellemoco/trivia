{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\trivia\\\\src\\\\App.js\";\nimport React, { Component } from \"react\"; // import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\n\nimport Alternatives from \"./components/Alternatives\";\nimport Question from \"./components/Question\";\nimport \"./App.css\";\nimport { qualifiedTypeIdentifier } from \"@babel/types\"; //import { list } from \"postcss\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.clicked = event => {\n      console.log(event.currentTarget.name);\n\n      if (this.checkAnswer(event.currentTarget.name)) {\n        this.createSetState();\n      }\n    };\n\n    this.createSetState = () => {\n      let lista = [];\n      console.log(this.state.quiz[0].results[this.state.id].incorrect_answers);\n      console.log(this.state.quiz[0].results[this.state.id].correct_answer);\n      this.state.quiz[0].results[this.state.id].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      lista.push(this.state.quiz[0].results[this.setState.id].correct_answer);\n      this.makeSuffle(lista);\n      this.setState({\n        question: this.state.quiz[0].results[this.state.id].question,\n        correct_answer: this.state.quiz[0].results[this.state.id].correct_answer,\n        listAnwser: lista\n      });\n    };\n\n    this.state = {\n      loading: false,\n      quiz: [],\n      listAnwser: [],\n      category: \"\",\n      question: \"\",\n      correct_answer: \"\",\n      id: 0,\n      difficulty: \"\",\n      type: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let lista = [];\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://opentdb.com/api.php?amount=5\") //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n    .then(response => response.json()) //.then(data => console.log(data))\n    .then(data => {\n      this.state.quiz.push(data);\n      data.results[0].incorrect_answers.map(incorrect => {\n        lista.push(incorrect);\n      });\n      lista.push(data.results[0].correct_answer);\n      this.makeSuffle(lista);\n      this.setState({\n        loading: false,\n        listAnwser: lista,\n        quiz: this.state.quiz\n      }); //console.log(this.state.quiz[0].results[0])\n      //results[i] para cada resultad\n\n      this.setState({\n        question: this.state.quiz[0].results[0].question\n      }); // this.setState({category:this.state.quiz[0].results[0].category})\n\n      this.setState({\n        correct_answer: this.state.quiz[0].results[0].correct_answer\n      }); // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n      // this.setState({type:this.state.quiz[0].results[0].type})   \n    });\n  }\n\n  checkAnswer(answer) {\n    console.log(this.state.correct_answer);\n    console.log(answer);\n\n    if (answer === this.state.correct_answer) {\n      let id_novo = this.state.id + 1;\n      this.setState({\n        id: id_novo\n      });\n      console.log(\"ACERTO\"); //rodar outro metodo\n\n      return true;\n    } else {\n      console.log(\"ERROU\"); // fim de jogo\n\n      return false;\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  makeSuffle(lista) {\n    for (var i = lista.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = lista[i];\n      lista[i] = lista[j];\n      lista[j] = temp;\n    }\n  }\n\n  render() {\n    // const frist = \"primeiro\"\n    // const second = \"segundo\"\n    const date = new Date();\n    const hours = date.getHours();\n    let timeOfDay;\n\n    if (hours < 12) {\n      timeOfDay = \"morning\";\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = \"afternon\";\n    } else {\n      timeOfDay = \"night\";\n    }\n\n    const text = this.state.loading ? \"loading...\" : this.state.quiz.question; //console.log(this.state.question)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Good \", timeOfDay, \"!! Let's play trivia?\")), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, text), React.createElement(Question, {\n      question: this.state.question,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[0],\n      style: {\n        display: !this.state.listAnwser[0] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.listAnwser[0]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[1],\n      style: {\n        display: !this.state.listAnwser[1] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.listAnwser[1]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[2],\n      style: {\n        display: !this.state.listAnwser[2] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.listAnwser[2]), React.createElement(\"button\", {\n      onClick: this.clicked,\n      type: \"submit\",\n      name: this.state.listAnwser[3],\n      style: {\n        display: !this.state.listAnwser[3] && \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.listAnwser[3])));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\node\\trivia\\src\\App.js"],"names":["React","Component","Alternatives","Question","qualifiedTypeIdentifier","App","constructor","clicked","event","console","log","currentTarget","name","checkAnswer","createSetState","lista","state","quiz","results","id","incorrect_answers","correct_answer","map","incorrect","push","setState","makeSuffle","question","listAnwser","loading","category","difficulty","type","componentDidMount","fetch","then","response","json","data","answer","id_novo","handleSubmit","preventDefault","i","length","j","Math","floor","random","temp","render","date","Date","hours","getHours","timeOfDay","text","display"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n// import Footer from \"./components/Footer\";\n//import Header from \"./components/Header\";\nimport Alternatives from  \"./components/Alternatives\";\nimport Question from  \"./components/Question\";\n\nimport \"./App.css\";\nimport { qualifiedTypeIdentifier } from \"@babel/types\";\n//import { list } from \"postcss\";\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state={\n            loading: false,\n            quiz: [],\n            listAnwser: [],\n            category: \"\",\n            question: \"\",\n            correct_answer: \"\",\n            id: 0,\n            difficulty: \"\",\n            type: \"\" \n        }\n    }\n    componentDidMount() {\n        let lista = []\n        this.setState({loading : true})\n        fetch(\"https://opentdb.com/api.php?amount=5\")\n    \n        //fetch(\"https://opentdb.com/api.php?amount=10&type=boolean\")\n\n            .then(response => response.json())\n            //.then(data => console.log(data))\n            .then(data => {\n                this.state.quiz.push(data)\n                data.results[0].incorrect_answers.map(\n                    incorrect=>{lista.push(incorrect)\n                })\n                lista.push(data.results[0].correct_answer)   \n                this.makeSuffle(lista)                \n\n                this.setState({\n                    loading: false,\n                    listAnwser : lista,\n                    quiz : this.state.quiz\n                })\n                //console.log(this.state.quiz[0].results[0])\n                //results[i] para cada resultad\n\n                \n                this.setState({question:this.state.quiz[0].results[0].question})\n                // this.setState({category:this.state.quiz[0].results[0].category})\n                this.setState({correct_answer:this.state.quiz[0].results[0].correct_answer})\n                // this.setState({difficulty:this.state.quiz[0].results[0].difficulty})\n                // this.setState({type:this.state.quiz[0].results[0].type})   \n            })\n\n    }\n\n    clicked = (event) => {\n        console.log(event.currentTarget.name)\n        \n        if (this.checkAnswer(event.currentTarget.name)){\n            this.createSetState()\n        }\n    }\n\n    createSetState = () => {\n        let lista = []\n        console.log(this.state.quiz[0].results[this.state.id].incorrect_answers)\n        console.log(this.state.quiz[0].results[this.state.id].correct_answer)\n\n        this.state.quiz[0].results[this.state.id].incorrect_answers.map( \n            incorrect=>{lista.push(incorrect)})\n\n        lista.push(this.state.quiz[0].results[this.setState.id].correct_answer)\n\n        this.makeSuffle(lista)\n\n        this.setState({\n            question:this.state.quiz[0].results[this.state.id].question,\n            correct_answer:this.state.quiz[0].results[this.state.id].correct_answer,\n            listAnwser: lista  \n        })\n\n\n\n\n    }\n\n    checkAnswer(answer){\n        console.log(this.state.correct_answer)\n        console.log(answer)\n        if (answer === this.state.correct_answer){\n            let id_novo = this.state.id + 1\n            this.setState({id:id_novo})\n            console.log(\"ACERTO\")\n            //rodar outro metodo\n            return true\n        }\n        else {\n            console.log(\"ERROU\")\n                // fim de jogo\n                return false \n\n        }\n\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n\n    }\n\n    makeSuffle(lista){\n        for (var i = lista.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = lista[i];\n            lista[i] = lista[j];\n            lista[j] = temp;\n        }\n    }\n    \n\n    render() {\n        // const frist = \"primeiro\"\n        // const second = \"segundo\"\n\n        const date = new Date()\n        const hours = date.getHours()\n        let timeOfDay\n\n        if (hours<12){\n            timeOfDay = \"morning\"\n        } else if (hours>=12 && hours <17){\n            timeOfDay = \"afternon\"\n        } else {\n            timeOfDay = \"night\"\n        }\n\n        const text = this.state.loading ? \"loading...\" : this.state.quiz.question\n        //console.log(this.state.question)\n        return( \n            <div>\n                <nav>\n                {/* <h1>teste {frist + \" \" + second }</h1>\n                <h2>oala {`${frist}`}</h2> */}\n                \n                <h3>Good {timeOfDay}!! Let's play trivia?</h3>\n                {/* <Header/>\n                <Footer/>nbhgfgh */}\n\n                </nav>\n                <main>\n                <p>{text}</p>\n\n\n                <Question question={this.state.question} id={this.state.id}/>\n                    <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[0]} style={{display: !this.state.listAnwser[0] && \"none\"}}>{this.state.listAnwser[0]}</button>\n                    <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[1]}  style={{display: !this.state.listAnwser[1] && \"none\"}}>{this.state.listAnwser[1]}</button>\n                    <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[2]}  style={{display: !this.state.listAnwser[2] && \"none\"}}>{this.state.listAnwser[2]}</button>\n                    <button onClick={this.clicked} type=\"submit\" name={this.state.listAnwser[3]}  style={{display: !this.state.listAnwser[3] && \"none\"}}>{this.state.listAnwser[3]}</button>\n                \n\n{/* \n                <Alternatives answer={this.state.listAnwser[0]} />\n                <Alternatives answer={this.state.listAnwser[1]} />\n                <Alternatives answer={this.state.listAnwser[2]} />\n                <Alternatives answer={this.state.listAnwser[3]} />\n\n                 */}\n                \n\n                {/* <h4>{JSON.stringify(this.state.quiz[0])}</h4> */}\n                </main>\n            </div> \n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}